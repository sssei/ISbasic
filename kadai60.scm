(define (stack-push st val)
  (cons val st))
(define (stack-read st)
  (car st))
(define (stack-pop st)
  (cdr st))
(define (calc-add st)
  (let ((x (stack-read st)) (y (stack-read (stack-pop st))))
    (stack-push (stack-pop (stack-pop st)) (+ x y))))
(define (calc-sub st)
  (let ((x (stack-read st)) (y (stack-read (stack-pop st))))
    (stack-push (stack-pop (stack-pop st)) (- y x))))
(define (calc-mul st)
  (let ((x (stack-read st)) (y (stack-read (stack-pop st))))
    (stack-push (stack-pop (stack-pop st)) (* x y))))

