(define (gcd a b)
  (if (< a b)
      (gcd b a)
      (if (= b 0)
	  a
	  (gcd b (modulo a b)))))
(define (rational a b)
  (let ((g (gcd a b)))
    (if (= a 0)
	(cons 0 1)
	(cons (/ a g) (/ b g)))))
(define (rat= r1 r2)
  (equal? (rational (car r1) (cdr r1)) (rational (car r2) (cdr r2))))
(define (rat+ r1 r2)
  (rational (+ (* (car r1) (cdr r2)) (* (car r2) (cdr r1))) (* (cdr r1) (cdr r2))))
(define (rat* r1 r2)
  (rational (* (car r1) (car r2)) (* (cdr r1) (cdr r2))))

