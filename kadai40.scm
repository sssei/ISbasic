(define (even<odd? x1 x2 x3 x4 x5)
  (define (inner-even x acc)
    (if (even? x) (+ acc 1) acc))
  (define (inner-even<odd? x1 x2 x3 x4 x5 cnt acc)
    (cond ((= cnt 0) (inner-even<odd? x1 x2 x3 x4 x5 (+ cnt 1) (inner-even x1 acc)))
	  ((= cnt 1) (inner-even<odd? x1 x2 x3 x4 x5 (+ cnt 1) (inner-even x2 acc)))
	  ((= cnt 2) (inner-even<odd? x1 x2 x3 x4 x5 (+ cnt 1) (inner-even x3 acc)))
	  ((= cnt 3) (inner-even<odd? x1 x2 x3 x4 x5 (+ cnt 1) (inner-even x4 acc)))
	  ((= cnt 4) (inner-even<odd? x1 x2 x3 x4 x5 (+ cnt 1) (inner-even x5 acc)))
	  (else (if (< acc 3) #t #f))))
  (inner-even<odd? x1 x2 x3 x4 x5 0 0))
