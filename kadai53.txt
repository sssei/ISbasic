関数exp1は条件分岐(even? n)によって(* (exp1 a (/ n 2)) (exp1 a (/ n 2)))を計算するとき、二つの(exp1 a (/ n 2))を呼び出している。ここで関数適用では引数は関数の中に入る前に引数の評価が行われることから、二つの引数(exp1 a (/ n 2))それぞれについて、評価が行われて再帰的に計算する必要がある。つまり、(exp1 a (/ n 2))を2回計算しなければならない。
一方で、関数exp2は条件分岐(even? n)が真のとき、(square (exp2 a (/ n 2)))を計算する。前述のようにSchemeは評価戦略として「値呼び」を実践しており、引数が関数に入る前に評価される。これは引数に(exp2　a (/ n 2))一つだけ取り、それを評価したあとにsquareによって２乗している。つまり、exp1のように二回(exp1 a (/ n 2))を評価する必要がない。このように、exp2では評価回数が減る為、より高速な計算が可能と考えられる。
